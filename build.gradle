configurations {
	itestCompile.extendsFrom testCompile
	itestCompileOnly.extendsFrom testCompileOnly
	itestAnnotationProcessor.extendsFrom annotationProcessor
	itestRuntime.extendsFrom testRuntime
}

buildscript {
	ext {
		springBootVersion = '2.1.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'

group = 'io.pivotal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	mavenLocal()
}

ext {
	set('springCloudVersion', 'Greenwich.SR1')
	set('cukesVersion', '1.2.5')
	set('lombokVersion', '1.18.6')
	set('wiremockVersion', '2.18.0')
}

sourceSets {
	itest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/itest/java')
		}
		resources.srcDir file('src/itest/resources')
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
	compile('com.marcosbarbero.cloud:spring-cloud-zuul-ratelimit:2.2.0.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('redis.clients:jedis:2.9.0')
	compile('org.springframework.data:spring-data-elasticsearch')

	compileOnly("org.projectlombok:lombok:${lombokVersion}")
	annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("com.github.tomakehurst:wiremock:${wiremockVersion}")

	itestCompile("info.cukes:cucumber-java:${cukesVersion}")
	itestCompile("info.cukes:cucumber-junit:${cukesVersion}")
	itestCompile("info.cukes:cucumber-spring:${cukesVersion}")
	itestCompileOnly("org.projectlombok:lombok:${lombokVersion}")
	itestAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task itest(type: Test) {

	/* Pass all the properties */
	systemProperties System.getProperties()

	testClassesDirs = sourceSets.itest.output.classesDirs
	classpath = sourceSets.itest.runtimeClasspath

	// This is not needed, but I like to see which tests have run
	testLogging {
		events "passed", "skipped", "failed"
	}

	// Gradle skips tasks whose input and output are up to date.
	// To ensure that your integration tests are run every time,
	// tell Gradle that the outputs of the integrationTest task should always be considered out of date.
	outputs.upToDateWhen { false }
}

check.dependsOn itest
itest.mustRunAfter test