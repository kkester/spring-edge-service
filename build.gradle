plugins {
	id 'org.springframework.boot' version '2.1.4.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'io.pivotal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', 'Greenwich.SR1')
	set('cukesVersion', '1.2.5')
	set('lombokVersion', '1.18.6')
	set('wiremockVersion', '2.18.0')
}

sourceSets {
	itest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/itest/java')
		}
		resources.srcDir file('src/itest/resources')
	}
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-redis')
	implementation('redis.clients:jedis:2.9.0')

	implementation("org.projectlombok:lombok:${lombokVersion}")
	annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation("com.github.tomakehurst:wiremock:${wiremockVersion}")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task itest(type: Test) {
	systemProperties System.getProperties()

	testClassesDirs = sourceSets.itest.output.classesDirs
	classpath = sourceSets.itest.runtimeClasspath

	testLogging {
		events "passed", "skipped", "failed"
	}

	outputs.upToDateWhen { false }
}

check.dependsOn itest
itest.mustRunAfter test